server:
  applicationConnectors:
    - type: http
      port: 8080
  adminConnectors:
    - type: http
      port: 8081
  applicationContextPath: /
  requestLog:
    appenders:
      - type: console
        timeZone: IST

logging:
  level: WARN
  # Logger-specific levels.pay
  loggers:
    deprecation: ERROR
    ExecutionGraphGenerator: WARN
    org.hibernate: ERROR
    QueuedSender: WARN
    feign: DEBUG

  appenders:
    - type: console
      threshold: DEBUG
      timeZone: IST
      logFormat: "%(%-5level) [%date] %X{TRACE-ID} [%thread] [%logger{0}]: %message%n"

rmqConfig:
  brokers:
    - host: localhost
      port: 5672
  threadPoolSize: 2
  userName: guest
  password: guest

discovery:
  namespace: phonepe
  environment: local
  zookeeper: localhost:2181
  publishedHost: 127.0.0.1
  publishedPort: 8080

riemann:
  host: riemann-stage.local.int
  port: 5555
  prefix: local.callback
  pollingInterval: 30
  tags:
    - callback

callbackConfig:
  callbackType: RMQ
  callbackPathConfigs:
    - pathIds:
      - "/foxtrot/*"
      queueId: DEFAULT
    - pathIds:
      - "/payment/*"
      - "/nexus/*"
      - "/mercury/*"
      queueId: payment-queue
  actors:
      DEFAULT:
        exchange: callback_messages
        delayed: false
        prefix: callback.actors
        concurrency: 3
        prefetchCount: 1
        retryConfig:
          type: COUNT_LIMITED_EXPONENTIAL_BACKOFF
          maxAttempts: 6
          multipier: 50
          maxTimeBetweenRetries: 30s
      payment-queue:
        exchange: callback_messages
        delayed: false
        prefix: callback.actors
        concurrency: 3
        prefetchCount: 1
        retryConfig:
          type: COUNT_LIMITED_EXPONENTIAL_BACKOFF
          maxAttempts: 6
          multipier: 50
          maxTimeBetweenRetries: 30s

revolver:
  hystrixStreamPath: /hystrix.stream
  mailBox:
    type: in_memory
  clientConfig:
    clientName: local-api
  serviceResolverConfig:
    useCurator: false
    zkConnectionString: "localhost:2181"
    namespace: local
  callbackTimeout: 3000
  services:
    - type: http
      service: foxtrotService
      connectionPoolSize: 5
      connectionKeepAliveInMillis: 60000
      authEnabled: false
      endpoint:
        type: simple
        host: localhost
        port: 17000
      apis:
        - api: cw_schedule
          path: "foxtrot/v1/tables"
          methods:
            - GET
          authorization:
            type: static
            methods:
              - GET
            roles:
              - internal-service
          whitelist: true
          runtime:
            threadPool:
              concurrency: 2
              timeout: 20000
    - type: http
      service: foxtrot
      connectionPoolSize: 5
      connectionKeepAliveInMillis: 60000
      authEnabled: false
      endpoint:
        type: simple
        host: localhost
        port: 17000
      apis:
        - api: cw_schedule
          path: "foxtrot/v1/tables"
          methods:
            - GET
          authorization:
            type: static
            methods:
              - GET
            roles:
              - internal-service
          whitelist: true
          runtime:
            threadPool:
              concurrency: 2
              timeout: 20000
    - type: http
      service: payments
      connectionPoolSize: 64
      connectionKeepAliveInMillis: 60000
      authEnabled: false
      threadPoolGroupConfig:
        threadPools:
            - threadPoolName: payments-db
              concurrency: 22
              timeout: 3000
            - threadPoolName: vault
              concurrency: 12
              timeout: 5000
            - threadPoolName: upi-meta
              concurrency: 20
              timeout: 5000
            - threadPoolName: extwallet-meta
              concurrency: 12
              timeout: 5000
      runtime:
        threadPool:
          concurrency: 24
          timeout: 1500
      endpoint:
        type: simple
        host: paymentservice.traefik.stg.phonepe.com
        port: 80
      apis:
        - api: get_transaction_limits
          path: "v1/limits/transaction/{userId}"
          methods:
            - GET
          runtime:
            threadPool:
              concurrency: 8
              timeout: 3000
          authorization:
            type: dynamic
            methods:
              - GET
            roles:
              - consumer
        - api: set_update_transaction_limits
          path: "v1/limits/transaction/{userId}/set"
          methods:
            - POST
          runtime:
            threadPool:
              concurrency: 3
              timeout: 3000
          authorization:
            type: dynamic
            methods:
              - POST
            roles:
              - consumer
        - api: ensemble_pay
          path: "v1/ensemble/payment/pay"
          methods:
            - POST
          runtime:
            threadPool:
              concurrency: 4
              timeout: 200000
          authorization:
            type: auto
            methods:
              - POST
            roles:
              - consumer
              - merchant

